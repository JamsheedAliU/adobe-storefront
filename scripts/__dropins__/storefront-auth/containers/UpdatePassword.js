<<<<<<< HEAD
import{jsx as i,jsxs as M}from"@dropins/tools/preact-jsx-runtime.js";import{Slot as g,classes as z}from"@dropins/tools/lib.js";import{v as H,u as J,a as K}from"../chunks/usePasswordValidationMessage.js";import"@dropins/tools/event-bus.js";import"@dropins/tools/recaptcha.js";import{a as Q}from"../chunks/getCustomerToken.js";import{r as X}from"../chunks/resetPassword.js";import{c as S,g as Y,u as Z,T as $,F as W,B as E}from"../chunks/useInLineAlert.js";import{useState as h,useEffect as O,useCallback as k}from"@dropins/tools/preact-hooks.js";import{useText as j}from"@dropins/tools/i18n.js";import{InLineAlert as C,InputPassword as R}from"@dropins/tools/components.js";import"../chunks/getStoreConfig.js";import"../chunks/network-error.js";import"@dropins/tools/fetch-graphql.js";import"../chunks/initialize.js";import"../chunks/setReCaptchaToken.js";import"@dropins/tools/preact-compat.js";const I=(o,d)=>o.split("&").filter(r=>r.includes(d)).map(r=>r.split("=")[1])[0],tt=({isEmailConfirmationRequired:o,signInOnSuccess:d,passwordConfigs:e,routeRedirectOnSignIn:r,routeWrongUrlRedirect:a,onErrorCallback:u,onSuccessCallback:c,handleSetInLineAlertProps:m,routeRedirectOnPasswordUpdate:f})=>{const t=j({errorNotification:"Auth.Notification.errorNotification",updatePasswordMessage:"Auth.Notification.updatePasswordMessage",customerTokenErrorMessage:"Auth.Api.customerTokenErrorMessage"}),[U,P]=h({userName:"",status:!1}),[L,N]=h(""),[x,_]=h(!1),[p,T]=h(""),[y,v]=h(""),[w,F]=h(!1);O(()=>{const{search:l}=window.location;!l.includes("token=")&&!l.includes("email=")&&S(a)&&(window.location.href=a());const s=decodeURIComponent(l),b=I(s,"token"),q=I(s,"email");T(q),v(b)},[a]);const B=k(async l=>{l.preventDefault(),F(!0);const s=Y(l.target),b=(s==null?void 0:s.password)&&p&&y,q=(e==null?void 0:e.requiredCharacterClasses)||0,G=(e==null?void 0:e.minLength)||0;if(!H(s==null?void 0:s.password,q)||s.password.length<+G){_(!0),F(!1);return}if(!b){m({type:"error",text:t.errorNotification}),F(!1);return}const{message:V,success:A}=await X(p,y,s.password);if(A){if(o||!o&&!d){S(f)&&(window.location.href=f()),_(!0),F(!1),m({type:"success",text:t.updatePasswordMessage}),N("");return}const n=await Q({email:p,password:s.password,handleSetInLineAlertProps:m,onErrorCallback:u,translations:t});n!=null&&n.userName&&(S(r)?window.location.href=r():(P({userName:n==null?void 0:n.userName,status:!0}),c==null||c(n==null?void 0:n.userName)))}else m({type:"error",text:V}),u==null||u({message:V,success:A});F(!1)},[p,y,e,o,t,d,m,r,f,u,c]),D=k(l=>{N(l)},[]);return{isSuccessful:U,updatePasswordValue:L,isClickSubmit:x,isLoading:w,submitUpdatePassword:B,handleSetUpdatePasswordValue:D}},et=({signInOnSuccess:o=!0,formSize:d="default",routeRedirectOnSignIn:e,routeWrongUrlRedirect:r,slots:a,onErrorCallback:u,onSuccessCallback:c,routeRedirectOnPasswordUpdate:m})=>{const f=j({title:"Auth.UpdatePasswordForm.title",buttonPrimary:"Auth.UpdatePasswordForm.buttonPrimary"}),{passwordConfigs:t,isEmailConfirmationRequired:U}=J(),{inLineAlertProps:P,handleSetInLineAlertProps:L}=Z(),{isSuccessful:N,updatePasswordValue:x,isClickSubmit:_,isLoading:p,submitUpdatePassword:T,handleSetUpdatePasswordValue:y}=tt({isEmailConfirmationRequired:U,signInOnSuccess:o,passwordConfigs:t,routeRedirectOnSignIn:e,routeWrongUrlRedirect:r,onErrorCallback:u,onSuccessCallback:c,handleSetInLineAlertProps:L,routeRedirectOnPasswordUpdate:m}),{isValidUniqueSymbols:v,defaultLengthMessage:w}=K({password:x,isClickSubmit:_,passwordConfigs:t});return N.status&&(a!=null&&a.SuccessNotification)?i(g,{"data-testid":"successNotificationTestId",name:"SuccessNotification",slot:a==null?void 0:a.SuccessNotification,context:{isSuccessful:N}}):M("div",{className:z(["auth-updatePasswordForm",d]),children:[i($,{text:f.title,bottomLine:!1,className:"auth-updatePasswordForm__title"}),P.text?i(C,{className:"auth-updatePasswordForm__notification",variant:"secondary",heading:P.text,icon:P.icon}):null,M(W,{name:"updatePassword_form",className:"auth-updatePasswordForm__form",submitCallback:T,isLoading:p,fieldsConfig:[],children:[i("div",{style:"display: none;",children:i("input",{type:"text",id:"username",name:"username",autocomplete:"username"})}),i(R,{defaultValue:x,onValue:y,className:"auth-updatePasswordForm__form__item",autoComplete:"new-password",name:"password",required:!0,error:v==="error"||(w==null?void 0:w.status)==="error",minLength:t==null?void 0:t.minLength,uniqueSymbolsStatus:v,validateLengthConfig:w,requiredCharacterClasses:t==null?void 0:t.requiredCharacterClasses}),i("div",{className:"auth-updatePasswordForm__button",children:i(E,{type:"submit",buttonText:f.buttonPrimary,variant:"primary",enableLoader:p})})]})]})},yt=({slots:o,formSize:d,signInOnSuccess:e,routeRedirectOnPasswordUpdate:r,routeRedirectOnSignIn:a,routeWrongUrlRedirect:u,onErrorCallback:c,onSuccessCallback:m})=>i("div",{className:"auth-update-password",children:i(et,{formSize:d,signInOnSuccess:e,routeRedirectOnSignIn:a,routeWrongUrlRedirect:u,onErrorCallback:c,onSuccessCallback:m,slots:o,routeRedirectOnPasswordUpdate:r})});export{yt as UpdatePassword,yt as default};
=======
import{jsx as o,jsxs as E}from"@dropins/tools/preact-jsx-runtime.js";import{Slot as Z,classes as $}from"@dropins/tools/lib.js";import{v as k,u as W,a as S}from"../chunks/usePasswordValidationMessage.js";import"@dropins/tools/event-bus.js";import"@dropins/tools/recaptcha.js";import{a as O}from"../chunks/getCustomerToken.js";import{r as g}from"../chunks/resetPassword.js";import{c as B,g as R,u as C,T as tt,F as et,B as at}from"../chunks/useInLineAlert.js";import{useState as h,useEffect as H,useCallback as I}from"@dropins/tools/preact-hooks.js";import{useText as K}from"@dropins/tools/i18n.js";import{InLineAlert as st,InputPassword as rt}from"@dropins/tools/components.js";import"../chunks/getStoreConfig.js";import"../chunks/network-error.js";import"@dropins/tools/fetch-graphql.js";import"../chunks/initialize.js";import"../chunks/setReCaptchaToken.js";import"@dropins/tools/preact-compat.js";const J=(u,l)=>u.split("&").filter(r=>r.includes(l)).map(r=>r.split("=")[1])[0],it=({isEmailConfirmationRequired:u,signInOnSuccess:l,passwordConfigs:t,routeRedirectOnSignIn:r,routeWrongUrlRedirect:f,onErrorCallback:a,onSuccessCallback:i,handleSetInLineAlertProps:d,routeRedirectOnPasswordUpdate:w,routeSignInPage:m})=>{const s=K({errorNotification:"Auth.Notification.errorNotification",updatePasswordMessage:"Auth.Notification.updatePasswordMessage",updatePasswordActionMessage:"Auth.Notification.updatePasswordActionMessage",customerTokenErrorMessage:"Auth.Api.customerTokenErrorMessage"}),[U,y]=h({userName:"",status:!1}),[F,_]=h(""),[L,x]=h(!1),[P,T]=h(""),[N,b]=h(""),[M,n]=h(!1),[A,v]=h(!1),[q,D]=h([]);H(()=>{L&&!q.length&&(F.length?v(!1):v(!0))},[L,F,q]),H(()=>{const{search:p}=window.location;!p.includes("token=")&&!p.includes("email=")&&B(f)&&(window.location.href=f());const e=decodeURIComponent(p),V=J(e,"token"),j=J(e,"email");T(j),b(V)},[f]);const Q=I(async p=>{p.preventDefault(),n(!0),D([]);const e=R(p.target),V=(e==null?void 0:e.password)&&P&&N;e!=null&&e.password||(v(!0),n(!1));const j=(t==null?void 0:t.requiredCharacterClasses)??0,Y=(t==null?void 0:t.minLength)??0;if(!k(e==null?void 0:e.password,j)||e.password.length<+Y){x(!0),n(!1);return}if(!V){d({type:"error",text:s.errorNotification}),n(!1);return}const{message:G,success:z}=await g(P,N,e.password);if(z){if(u||!u&&!l){i==null||i(),B(w)&&(window.location.href=w()),x(!0),n(!1),v(!1),_(""),D([{label:s.updatePasswordActionMessage,onClick:()=>{window.location.href=m==null?void 0:m()}}]),d({type:"success",text:s.updatePasswordMessage});return}const c=await O({email:P,password:e.password,handleSetInLineAlertProps:d,onErrorCallback:a,translations:s});c!=null&&c.userName&&(i==null||i(c==null?void 0:c.userName),B(r)?window.location.href=r():y({userName:c==null?void 0:c.userName,status:!0}))}else d({type:"error",text:G}),a==null||a({message:G,success:z});n(!1)},[P,N,t==null?void 0:t.requiredCharacterClasses,t==null?void 0:t.minLength,s,u,l,m,a,i,r,d,w]),X=I(p=>{_(p)},[]);return{additionalActionsAlert:q,passwordError:A,isSuccessful:U,updatePasswordValue:F,isClickSubmit:L,isLoading:M,submitUpdatePassword:Q,handleSetUpdatePasswordValue:X}},ot=({signInOnSuccess:u=!0,formSize:l="default",routeRedirectOnSignIn:t,routeWrongUrlRedirect:r,routeSignInPage:f,slots:a,onErrorCallback:i,onSuccessCallback:d,routeRedirectOnPasswordUpdate:w})=>{const m=K({title:"Auth.UpdatePasswordForm.title",buttonPrimary:"Auth.UpdatePasswordForm.buttonPrimary",placeholder:"Auth.InputPassword.placeholder",floatingLabel:"Auth.InputPassword.floatingLabel"}),{passwordConfigs:s,isEmailConfirmationRequired:U}=W(),{inLineAlertProps:y,handleSetInLineAlertProps:F}=C(),{additionalActionsAlert:_,passwordError:L,isSuccessful:x,updatePasswordValue:P,isClickSubmit:T,isLoading:N,submitUpdatePassword:b,handleSetUpdatePasswordValue:M}=it({isEmailConfirmationRequired:U,signInOnSuccess:u,passwordConfigs:s,routeRedirectOnSignIn:t,routeWrongUrlRedirect:r,onErrorCallback:i,onSuccessCallback:d,handleSetInLineAlertProps:F,routeRedirectOnPasswordUpdate:w,routeSignInPage:f}),{isValidUniqueSymbols:n,defaultLengthMessage:A}=S({password:P,isClickSubmit:T,passwordConfigs:s});return x.status&&(a!=null&&a.SuccessNotification)?o(Z,{"data-testid":"successNotificationTestId",name:"SuccessNotification",slot:a==null?void 0:a.SuccessNotification,context:{isSuccessful:x}}):E("div",{className:$(["auth-updatePasswordForm",l]),children:[o(tt,{text:m.title,bottomLine:!1,className:"auth-updatePasswordForm__title"}),y.text?o(st,{className:"auth-updatePasswordForm__notification",variant:"secondary",heading:y.text,icon:y.icon,additionalActions:_}):null,E(et,{name:"updatePassword_form",className:"auth-updatePasswordForm__form",submitCallback:b,isLoading:N,fieldsConfig:[],children:[o("div",{style:"display: none;",children:o("input",{type:"text",id:"username",name:"username",autoComplete:"username"})}),o(rt,{defaultValue:P,onValue:M,className:"auth-updatePasswordForm__form__item",autoComplete:"new-password",name:"password",error:L||n==="error"||(A==null?void 0:A.status)==="error",minLength:s==null?void 0:s.minLength,uniqueSymbolsStatus:n,validateLengthConfig:A,requiredCharacterClasses:s==null?void 0:s.requiredCharacterClasses,placeholder:m.placeholder,floatingLabel:m.floatingLabel}),o("div",{className:"auth-updatePasswordForm__button",children:o(at,{type:"submit",buttonText:m.buttonPrimary,variant:"primary",enableLoader:N})})]})]})},_t=({slots:u,formSize:l,signInOnSuccess:t,routeRedirectOnPasswordUpdate:r,routeRedirectOnSignIn:f,routeSignInPage:a,routeWrongUrlRedirect:i,onErrorCallback:d,onSuccessCallback:w})=>o("div",{className:"auth-update-password",children:o(ot,{formSize:l,signInOnSuccess:t,routeSignInPage:a,routeRedirectOnSignIn:f,routeWrongUrlRedirect:i,onErrorCallback:d,onSuccessCallback:w,slots:u,routeRedirectOnPasswordUpdate:r})});export{_t as UpdatePassword,_t as default};
>>>>>>> template/main
